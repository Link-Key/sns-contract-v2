{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x085716c13ca879BAF7acA84E4ba643C82bda9158",
    "txHash": "0x2bbbcdec2d8513f53574b3378f7d60d0fa34936e05a002354ee0c626879c4884",
    "deployTransaction": {
      "hash": "0x2bbbcdec2d8513f53574b3378f7d60d0fa34936e05a002354ee0c626879c4884",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xB3eF1C9718F3EAFaeb6fd7Ac63E8f43493101Ded",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x01dcd65000"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 69,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x126d14aa0c8c558ce474f0202ba5fbb8d82c902e808b7343c2a0461e0a1bae13",
      "s": "0x1d1133a7d82656fedf5ff666364ca32855950ab8b37b76eb7cc7b5e2d9165643",
      "v": 160037,
      "creates": "0x085716c13ca879BAF7acA84E4ba643C82bda9158",
      "chainId": 80001
    }
  },
  "proxies": [
    {
      "address": "0xFA12F5ff3c2A137a02F1678E50c54276624b50FB",
      "txHash": "0x442db92cbae4fc4ce5caa397ea134d044a02509b4003a169c00d3fc43984b83a",
      "kind": "transparent"
    },
    {
      "address": "0x23bf7e618c5C2F2772620aa7D57fE6db27eeA176",
      "txHash": "0x2c8b2c48db3cbd417fb4e289529e6a00208af383097ec7c3a300f72672a8753f",
      "kind": "transparent"
    },
    {
      "address": "0x71Bc31C3eE2896408B93E41b0b43ea1bf9a20FE3",
      "txHash": "0x3e75cbd70db2b8bba9dfbb4ef4cdad806c07099d3334faaedc2746ccaf075b6f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "85c4dd6a396bde076b7f8b3cb860ee283cacefa6b42dd2a8c6ab615386ff2974": {
      "address": "0xb388156EB6d8e8BE4B56D62b9E9e00A98F081836",
      "txHash": "0x37cc7754dda2d38e3e8a2c72c3077b528913c391772bfa7ed2bf82336c76719f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "LinkKey",
            "label": "minter",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/LinkKey.sol:15"
          },
          {
            "contract": "LinkKey",
            "label": "userCollectAddress",
            "type": "t_address",
            "src": "contracts/v1/LinkKey.sol:17"
          },
          {
            "contract": "LinkKey",
            "label": "teamCollectAddress",
            "type": "t_address",
            "src": "contracts/v1/LinkKey.sol:18"
          },
          {
            "contract": "LinkKey",
            "label": "investorCollectAddress",
            "type": "t_address",
            "src": "contracts/v1/LinkKey.sol:19"
          },
          {
            "contract": "LinkKey",
            "label": "bidderCollectAddress",
            "type": "t_address",
            "src": "contracts/v1/LinkKey.sol:20"
          },
          {
            "contract": "LinkKey",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/v1/LinkKey.sol:22"
          },
          {
            "contract": "LinkKey",
            "label": "userShare",
            "type": "t_uint256",
            "src": "contracts/v1/LinkKey.sol:23"
          },
          {
            "contract": "LinkKey",
            "label": "teamShare",
            "type": "t_uint256",
            "src": "contracts/v1/LinkKey.sol:24"
          },
          {
            "contract": "LinkKey",
            "label": "investorShare",
            "type": "t_uint256",
            "src": "contracts/v1/LinkKey.sol:25"
          },
          {
            "contract": "LinkKey",
            "label": "bidderShare",
            "type": "t_uint256",
            "src": "contracts/v1/LinkKey.sol:26"
          },
          {
            "contract": "LinkKey",
            "label": "releaseAmount",
            "type": "t_uint256",
            "src": "contracts/v1/LinkKey.sol:28"
          },
          {
            "contract": "LinkKey",
            "label": "releaseTime",
            "type": "t_struct(Timestamp)2905_storage",
            "src": "contracts/v1/LinkKey.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Timestamp)2905_storage": {
            "label": "struct TimersUpgradeable.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "756705a1da2fc5595d941bfed154695eaaad647c7ec11e5a1515efafc1fbbd47": {
      "address": "0x0A37ACE8Fe0F09D1980A9eA5ac592387977411C2",
      "txHash": "0x4918308f207ff00824e98dc89fc4b1fccbcb97c088521d40116db20c1a1c3f24",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFT",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v1/NFT.sol:25"
          },
          {
            "contract": "NFT",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v1/NFT.sol:63"
          },
          {
            "contract": "NFT",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v1/NFT.sol:73"
          },
          {
            "contract": "SNS",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v1/SNS.sol:17"
          },
          {
            "contract": "SNS",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v1/SNS.sol:18"
          },
          {
            "contract": "SNS",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:19"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:20"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:21"
          },
          {
            "contract": "SNS",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v1/SNS.sol:24"
          },
          {
            "contract": "SNS",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:27"
          },
          {
            "contract": "SNS",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:30"
          },
          {
            "contract": "SNS",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:38"
          },
          {
            "contract": "SNS",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)6046_storage)",
            "src": "contracts/v1/SNS.sol:47"
          },
          {
            "contract": "SNS",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:50"
          },
          {
            "contract": "SNS",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v1/SNS.sol:53"
          },
          {
            "contract": "SNS",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/SNS.sol:56"
          },
          {
            "contract": "SNS",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v1/SNS.sol:59"
          },
          {
            "contract": "SNS",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:62"
          },
          {
            "contract": "SNS",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v1/SNS.sol:65"
          },
          {
            "contract": "SNS",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:68"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)6046_storage)": {
            "label": "mapping(string => struct SNS.ResolverInfo)"
          },
          "t_struct(ResolverInfo)6046_storage": {
            "label": "struct SNS.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6ebc3f281ef347158db426c31ae1b686d8d8951497e30056af07b903a7d840bb": {
      "address": "0x571623254e363e4aeFe2dDc60E31B322a47f9028",
      "txHash": "0x2e5a2f0338228b39e9cfa924536811fdac8cfdcf2eea6a9ad440d3ece558bc72",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "SNSResolver",
            "label": "records",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Record)7189_storage)",
            "src": "contracts/v1/SNSResolver.sol:34"
          },
          {
            "contract": "SNSResolver",
            "label": "recordsStr",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "contracts/v1/SNSResolver.sol:36"
          },
          {
            "contract": "SNSResolver",
            "label": "_snsAddress",
            "type": "t_address",
            "src": "contracts/v1/SNSResolver.sol:49"
          }
        ],
        "types": {
          "t_mapping(t_string_memory_ptr,t_struct(Record)7189_storage)": {
            "label": "mapping(string => struct SNSResolver.Record)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Record)7189_storage": {
            "label": "struct SNSResolver.Record",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "ethAddress",
                "type": "t_string_storage"
              },
              {
                "label": "btcAddress",
                "type": "t_string_storage"
              },
              {
                "label": "ltcAddress",
                "type": "t_string_storage"
              },
              {
                "label": "dogeAddress",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsUrl",
                "type": "t_string_storage"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "email",
                "type": "t_string_storage"
              },
              {
                "label": "avatar",
                "type": "t_string_storage"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "notice",
                "type": "t_string_storage"
              },
              {
                "label": "keywords",
                "type": "t_string_storage"
              },
              {
                "label": "comGithub",
                "type": "t_string_storage"
              },
              {
                "label": "comReddit",
                "type": "t_string_storage"
              },
              {
                "label": "comTwitter",
                "type": "t_string_storage"
              },
              {
                "label": "orgTelegram",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a2800e5a04fb976145de5887ed7e236fcc9d47b4d8c8e1e2702242c96f3f8f40": {
      "address": "0xE60da3a1F11B722bD8080c812B1882a5838482b7",
      "txHash": "0x171552c36fd36effecbc1982296681c2ac50b860b9cb902dfb027188761c1d5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10504_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9220_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10504_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)10504_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "951aa1ef9dd0af820f9c52fa091ac31e59487d1a9df82d7f917ab9dd715d2265": {
      "address": "0x0a546f404d932f80F6d2025A81b47c7BB732C49F",
      "txHash": "0xff45d1f83bbc8c141abaea13806f0dd2f95ef238de1a0d2d9bf85a06c312edb1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10504_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9220_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10504_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)10504_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3b4fdb3c7f67d0253cd06eaa31f5b8c0f18db371b36551cccd9c39cacf5462f3": {
      "address": "0xada761e940634432F68aC75d2E85e2C17eBde80A",
      "txHash": "0xf43fccf3194b2d3b8fac7daac3fdcca7f71b934c0138121218ba5dedb48dcaa3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10504_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9220_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10504_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)10504_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aceaa44751acc2c04ba8264ee94c4eb59b8b780081ad030db31b4eed0f34382c": {
      "address": "0xBa1f1e3677c9EBF476e1F4a71C172F06a8081CE3",
      "txHash": "0x93cbdeb0cdcb6c482f33d96d92d984f43968bcd25e52fb5b03a5168737465a76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10504_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9220_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10504_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)10504_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b2a0e0776ef490e702d5850b10972e8ab86ec9b8b303a5369eeaf18b361e9eee": {
      "address": "0x01A17823d61289a212234A48B064524ECf3D5435",
      "txHash": "0x5ba7e15aa91e0225e8aa657d26a17d7b52ff523f37c0ff7bf5181132e37d902b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10504_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9220_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10504_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)10504_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0cb37aa406296599602c9505d686a3f3748ecf175091d0cc3dca55a5d11a66b": {
      "address": "0xB2B1a2e0595a2a7d387D8C25C91ade7DeC039dFe",
      "txHash": "0xb77e8b3ea3569bf344197873ea6b0f6c52f93633030b44fb39db1b93d451838c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10504_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9220_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10504_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)10504_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "54d62d89c03a794027061925d21d4eb2c8886927ae8c475f63f32d435aeb3114": {
      "address": "0xCb5B78B40058c4aa96d2170b8D468b057119aDBE",
      "txHash": "0x2d1553f290aa3847f2d25d0cd1541a4ce5acdd4e4983e56fa3caf811959ddaee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10504_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9220_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9220_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10504_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)10504_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8dcee1f3145050b6700c6efbeb21e5613adf8a080635e7437de4837c6f60721a": {
      "address": "0xd309600aDE11f968F23a4eA0d4506b547A17f13a",
      "txHash": "0x10ee1704b79a0f5e0f688e80f9ddc3eb5c62b03eb1d7d09de18f03a43e9860d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9119_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9119_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9119_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2f830d64c6d2bf3198fa03993dc8630e178f7122fef2e6cd82b2229c0da7e2f4": {
      "address": "0xF01C6a9d59Fe33439E3b1C1F9810d8B93ae0Fe3b",
      "txHash": "0xddd74239e98e159a370eba2ef0920342fd24bc34078296c5a0731a5612d32aa6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:68"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:78"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9120_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9120_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9120_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eef784d3ef7ea76f06d05934ff697d413bd311447c26badb1ca3b204d122be98": {
      "address": "0x3434669a138b2b373869e9721b8c405a4eDCe5A2",
      "txHash": "0x176c2928ba04cc295268354d8495298d6b46b43287a36deeef90164157c2b019",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:68"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:78"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9120_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9120_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9120_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74b35f09fbcd698c41441011d79a75c7ab31568a4a730e15c2940b4ae2679242": {
      "address": "0x1338Be87D9505dAB57fA5733409cb2bEF5B4E8DD",
      "txHash": "0xea971d09221d23f97a782162a8ea706cd82da71d659ebd8df69a1dd533c2fde8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:68"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:78"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9126_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9126_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9126_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e405a32397ae74a3ca1fd38cde74c76b4c722b04962babc7de66e1c25859478f": {
      "address": "0x6650f52ff6d68F3C9C5Ac5DaBb0D364Ebfd71e2A",
      "txHash": "0x9ca6f8bc8dd09f9337dfa5875f01f30f35935a39e2f2d2a2c2962d64d72dddb3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:68"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:78"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9130_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9130_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9130_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2768de977e79afef14ddc63cb91d6b7af9f8d075cea3416c8504866a1c47ccb6": {
      "address": "0x9d895664cf7979C5ba91d60556772c86F509289B",
      "txHash": "0x0e780b76c735cbe831407ce143440177ac5e688152e6aef780a581dada3d43a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9130_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9130_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9130_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f30643eaa5b4f049286a8f76a3e6548f44ed1f12605522b58ab3712c649a066d": {
      "address": "0x5bE1D5279c9EB997E04070e83c4443267870ADd3",
      "txHash": "0x90a33f6fcb66da6a8fb38e6885beee9e97edc591d29a4fd52b14cfb3c07aa0cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9130_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9130_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9130_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93aa4682fd700d2e620d0c871f714b75a8f2a9b9f4565eae597e3a34f71b2e3f": {
      "address": "0x39c615e0e434498F778f039F398EfC967249a002",
      "txHash": "0xb6feb3a8d89e2946d4358a1ba00e8090a2acf06854744f5609be4d9120b377e2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.2/SNSV2_2.sol:18"
          },
          {
            "contract": "SNSV2_2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.2/SNSV2_2.sol:19"
          },
          {
            "contract": "SNSV2_2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:20"
          },
          {
            "contract": "SNSV2_2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:21"
          },
          {
            "contract": "SNSV2_2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:22"
          },
          {
            "contract": "SNSV2_2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.2/SNSV2_2.sol:25"
          },
          {
            "contract": "SNSV2_2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:28"
          },
          {
            "contract": "SNSV2_2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:31"
          },
          {
            "contract": "SNSV2_2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:39"
          },
          {
            "contract": "SNSV2_2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9437_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:48"
          },
          {
            "contract": "SNSV2_2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.2/SNSV2_2.sol:51"
          },
          {
            "contract": "SNSV2_2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:54"
          },
          {
            "contract": "SNSV2_2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:57"
          },
          {
            "contract": "SNSV2_2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.2/SNSV2_2.sol:60"
          },
          {
            "contract": "SNSV2_2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:63"
          },
          {
            "contract": "SNSV2_2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:66"
          },
          {
            "contract": "SNSV2_2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.2/SNSV2_2.sol:69"
          },
          {
            "contract": "SNSV2_2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:465"
          },
          {
            "contract": "SNSV2_2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:482"
          },
          {
            "contract": "SNSV2_2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10700_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9437_storage)": {
            "label": "mapping(string => struct SNSV2_2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9437_storage": {
            "label": "struct SNSV2_2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10700_storage)": {
            "label": "mapping(uint256 => struct SNSV2_2.Coin)"
          },
          "t_struct(Coin)10700_storage": {
            "label": "struct SNSV2_2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
