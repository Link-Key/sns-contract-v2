{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3875Ca099236E3A0a375bF658b0cd54cbf085c93",
    "txHash": "0x9435d0e814c41168eafe997d89d5f1bbce9c58646f214259ca502daca60a3793",
    "deployTransaction": {
      "hash": "0x9435d0e814c41168eafe997d89d5f1bbce9c58646f214259ca502daca60a3793",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x343F8c28c45a9b6927439C35F2C4140230be9187",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x06fc23ac00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 3,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xc57418ef9e40b4d6242b6fc30912bb3154fbb6fe27eb526e0bfc57e3b6532337",
      "s": "0x6f84e5fd7cc71443c88ed9f9b6bd4f4fe2e617f65506d197bad2926e8c7434ea",
      "v": 310,
      "creates": "0x3875Ca099236E3A0a375bF658b0cd54cbf085c93",
      "chainId": 137
    }
  },
  "proxies": [
    {
      "address": "0x1613a2e49b10D051Fa3Ad09B2c5B8C23052cEEFa",
      "txHash": "0xbc473a060d76a4389c70cdc84f28b41cf287267d09a5b4be81cd94f45909d891",
      "kind": "transparent"
    },
    {
      "address": "0xB9eff4c5013E4bB8F208002f6FffC3582786bF0D",
      "txHash": "0x474924b126092491cdd3b7bfd910974c7810d4c8a3bbd2f37093fe493e82f94e",
      "kind": "transparent"
    },
    {
      "address": "0x36F6f4C9F372Bca55EFEe6ddA6D4A678Db9e7932",
      "txHash": "0x2f585a12f0956e6461a47a34dceeda6683b8b3a3c19adde94d619832b8149a8c",
      "kind": "transparent"
    },
    {
      "address": "0xd583d22f4347DaDC984074465B3dcccd9146E3eE",
      "txHash": "0x67ba139fd552c1d1217765e19f3c2ebb747ef58e4b3c88b011d4540ddbebbbeb",
      "kind": "transparent"
    },
    {
      "address": "0x25b4a9271Ce4133aF29f1F66C60cbce20420022c",
      "txHash": "0x878f2c578c18a99f462ac5c0fbbdaf1e71c0c9a70c098ba0215bccd4c6798d5e",
      "kind": "transparent"
    },
    {
      "address": "0xC0c0E9A45E9BEB870A8FB4500A68527B4fbA55f6",
      "txHash": "0x21ca4d9e349a079a2a1be3b4638e7236ea5e205648e32d052a2c01935c15d72a",
      "kind": "transparent"
    },
    {
      "address": "0xAFaf95280b7aD3B2b4B526deF2baC04bA2Ba254C",
      "txHash": "0x157a2c8d14f75ab16c664f3d3d3c4ebfe2fc292724ff784bd2bf18d2cfcbdea8",
      "kind": "transparent"
    },
    {
      "address": "0x85D4DD2850A517E22231a9c4020BFC2000C88406",
      "txHash": "0xdaf7a284adcb6e8b4924c7688c7235003244c3cf41ddecb5cbf26800807a741c",
      "kind": "transparent"
    },
    {
      "address": "0x19AD2b1F012349645C3173EA63F98948A2b43d27",
      "txHash": "0x1c28b9ef3f98edf9d55d740c41296534b8a35229a3a587d7f850e2a092114482",
      "kind": "transparent"
    },
    {
      "address": "0x08f4372e1CdBDcD958cF5ad6ECcb5637E64A9Ac7",
      "txHash": "0xd17232ae0f7104359a5dedf71cca583d8ed2f03dcfc462f7adaa861c66793413",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8a419b3b8a5a221114c294aaec147040f0c666afbc66d02012502ceb2967c9c5": {
      "address": "0x7a38683a20E1db1b0766b7cB28336ae7696566C5",
      "txHash": "0xdef4075c77b2d84ef7c5007453c100a1ba861a2fba52bc78d9715a8fd3d1ebef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFT",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v1/NFT.sol:25"
          },
          {
            "contract": "NFT",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v1/NFT.sol:43"
          },
          {
            "contract": "NFT",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v1/NFT.sol:53"
          },
          {
            "contract": "SNS",
            "label": "_key",
            "type": "t_contract(LinkKey)5167",
            "src": "contracts/v1/SNS.sol:17"
          },
          {
            "contract": "SNS",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v1/SNS.sol:18"
          },
          {
            "contract": "SNS",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:19"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:20"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:21"
          },
          {
            "contract": "SNS",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v1/SNS.sol:24"
          },
          {
            "contract": "SNS",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:27"
          },
          {
            "contract": "SNS",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:30"
          },
          {
            "contract": "SNS",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:38"
          },
          {
            "contract": "SNS",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5526_storage)",
            "src": "contracts/v1/SNS.sol:47"
          },
          {
            "contract": "SNS",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:50"
          },
          {
            "contract": "SNS",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v1/SNS.sol:53"
          },
          {
            "contract": "SNS",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/SNS.sol:56"
          },
          {
            "contract": "SNS",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v1/SNS.sol:59"
          },
          {
            "contract": "SNS",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:62"
          },
          {
            "contract": "SNS",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v1/SNS.sol:65"
          },
          {
            "contract": "SNS",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:68"
          }
        ],
        "types": {
          "t_contract(LinkKey)5167": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5526_storage)": {
            "label": "mapping(string => struct SNS.ResolverInfo)"
          },
          "t_struct(ResolverInfo)5526_storage": {
            "label": "struct SNS.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6ebc3f281ef347158db426c31ae1b686d8d8951497e30056af07b903a7d840bb": {
      "address": "0xb3412B7F44502554a4a602661b700D62533A39f3",
      "txHash": "0xcd25349f88194aab6ba31c7a0b218384b0d27d2c76e1dde11af3cbaca54c0ee0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "SNSResolver",
            "label": "records",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Record)6652_storage)",
            "src": "contracts/v1/SNSResolver.sol:34"
          },
          {
            "contract": "SNSResolver",
            "label": "recordsStr",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "contracts/v1/SNSResolver.sol:36"
          },
          {
            "contract": "SNSResolver",
            "label": "_snsAddress",
            "type": "t_address",
            "src": "contracts/v1/SNSResolver.sol:49"
          }
        ],
        "types": {
          "t_mapping(t_string_memory_ptr,t_struct(Record)6652_storage)": {
            "label": "mapping(string => struct SNSResolver.Record)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Record)6652_storage": {
            "label": "struct SNSResolver.Record",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "ethAddress",
                "type": "t_string_storage"
              },
              {
                "label": "btcAddress",
                "type": "t_string_storage"
              },
              {
                "label": "ltcAddress",
                "type": "t_string_storage"
              },
              {
                "label": "dogeAddress",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsUrl",
                "type": "t_string_storage"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "email",
                "type": "t_string_storage"
              },
              {
                "label": "avatar",
                "type": "t_string_storage"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              },
              {
                "label": "notice",
                "type": "t_string_storage"
              },
              {
                "label": "keywords",
                "type": "t_string_storage"
              },
              {
                "label": "comGithub",
                "type": "t_string_storage"
              },
              {
                "label": "comReddit",
                "type": "t_string_storage"
              },
              {
                "label": "comTwitter",
                "type": "t_string_storage"
              },
              {
                "label": "orgTelegram",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8c92efa76188a495fd76fadbace29ea5ebc84678b0a9a09c180942b01c76ca3f": {
      "address": "0x4677d44CFb2f3c0df14b21B9c59E0c03F37a3416",
      "txHash": "0x133bc19a6284c5a94e4376ac52a9983764aa9eadf0e4abfa39a64fada4c5de38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFT",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v1/NFT.sol:25"
          },
          {
            "contract": "NFT",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v1/NFT.sol:53"
          },
          {
            "contract": "NFT",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v1/NFT.sol:63"
          },
          {
            "contract": "SNS",
            "label": "_key",
            "type": "t_contract(LinkKey)5167",
            "src": "contracts/v1/SNS.sol:17"
          },
          {
            "contract": "SNS",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v1/SNS.sol:18"
          },
          {
            "contract": "SNS",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:19"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:20"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:21"
          },
          {
            "contract": "SNS",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v1/SNS.sol:24"
          },
          {
            "contract": "SNS",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:27"
          },
          {
            "contract": "SNS",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:30"
          },
          {
            "contract": "SNS",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:38"
          },
          {
            "contract": "SNS",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5554_storage)",
            "src": "contracts/v1/SNS.sol:47"
          },
          {
            "contract": "SNS",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:50"
          },
          {
            "contract": "SNS",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v1/SNS.sol:53"
          },
          {
            "contract": "SNS",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/SNS.sol:56"
          },
          {
            "contract": "SNS",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v1/SNS.sol:59"
          },
          {
            "contract": "SNS",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:62"
          },
          {
            "contract": "SNS",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v1/SNS.sol:65"
          },
          {
            "contract": "SNS",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:68"
          }
        ],
        "types": {
          "t_contract(LinkKey)5167": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5554_storage)": {
            "label": "mapping(string => struct SNS.ResolverInfo)"
          },
          "t_struct(ResolverInfo)5554_storage": {
            "label": "struct SNS.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "db760b8fd118b683fbefe9dcbccbc32edc2644dd2bb5edf7d7a90d6ecd153f2e": {
      "address": "0x86F30aa6eE5D014C647838C84aD070d3fdC581D5",
      "txHash": "0xcd1cc216f448f23494f1ef896d55c0237288b145a76a1a5f3966144886695ce4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFT",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v1/NFT.sol:25"
          },
          {
            "contract": "NFT",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v1/NFT.sol:57"
          },
          {
            "contract": "NFT",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v1/NFT.sol:67"
          },
          {
            "contract": "SNS",
            "label": "_key",
            "type": "t_contract(LinkKey)5167",
            "src": "contracts/v1/SNS.sol:17"
          },
          {
            "contract": "SNS",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v1/SNS.sol:18"
          },
          {
            "contract": "SNS",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:19"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:20"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:21"
          },
          {
            "contract": "SNS",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v1/SNS.sol:24"
          },
          {
            "contract": "SNS",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:27"
          },
          {
            "contract": "SNS",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:30"
          },
          {
            "contract": "SNS",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:38"
          },
          {
            "contract": "SNS",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5569_storage)",
            "src": "contracts/v1/SNS.sol:47"
          },
          {
            "contract": "SNS",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:50"
          },
          {
            "contract": "SNS",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v1/SNS.sol:53"
          },
          {
            "contract": "SNS",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/SNS.sol:56"
          },
          {
            "contract": "SNS",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v1/SNS.sol:59"
          },
          {
            "contract": "SNS",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:62"
          },
          {
            "contract": "SNS",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v1/SNS.sol:65"
          },
          {
            "contract": "SNS",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:68"
          }
        ],
        "types": {
          "t_contract(LinkKey)5167": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5569_storage)": {
            "label": "mapping(string => struct SNS.ResolverInfo)"
          },
          "t_struct(ResolverInfo)5569_storage": {
            "label": "struct SNS.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3cff13a77a2064a8e746917be31ae6ecb5f1a7f4ac226379219adec710c2e6f7": {
      "address": "0x42DBD6cAF8b1AE5d364eC0d90BFDC8D1770e4ea3",
      "txHash": "0xd0b14d7c9b097de59d84d32aaa1ce5ca84ee7c0895fcacd299381df6466577d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFT",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v1/NFT.sol:25"
          },
          {
            "contract": "NFT",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v1/NFT.sol:63"
          },
          {
            "contract": "NFT",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v1/NFT.sol:73"
          },
          {
            "contract": "SNS",
            "label": "_key",
            "type": "t_contract(LinkKey)5167",
            "src": "contracts/v1/SNS.sol:17"
          },
          {
            "contract": "SNS",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v1/SNS.sol:18"
          },
          {
            "contract": "SNS",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:19"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:20"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:21"
          },
          {
            "contract": "SNS",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v1/SNS.sol:24"
          },
          {
            "contract": "SNS",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:27"
          },
          {
            "contract": "SNS",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:30"
          },
          {
            "contract": "SNS",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:38"
          },
          {
            "contract": "SNS",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5578_storage)",
            "src": "contracts/v1/SNS.sol:47"
          },
          {
            "contract": "SNS",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:50"
          },
          {
            "contract": "SNS",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v1/SNS.sol:53"
          },
          {
            "contract": "SNS",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/SNS.sol:56"
          },
          {
            "contract": "SNS",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v1/SNS.sol:59"
          },
          {
            "contract": "SNS",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:62"
          },
          {
            "contract": "SNS",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v1/SNS.sol:65"
          },
          {
            "contract": "SNS",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:68"
          }
        ],
        "types": {
          "t_contract(LinkKey)5167": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)5578_storage)": {
            "label": "mapping(string => struct SNS.ResolverInfo)"
          },
          "t_struct(ResolverInfo)5578_storage": {
            "label": "struct SNS.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "756705a1da2fc5595d941bfed154695eaaad647c7ec11e5a1515efafc1fbbd47": {
      "address": "0x9476b1c6F57C0ac6C6c4A967B2a26c7DD7fd870B",
      "txHash": "0xabc53a0813ba4d7e8aefa5d6a3f28c40e024fc9f64f4c1442c5429fb65d1fdc3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFT",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v1/NFT.sol:25"
          },
          {
            "contract": "NFT",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v1/NFT.sol:63"
          },
          {
            "contract": "NFT",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v1/NFT.sol:73"
          },
          {
            "contract": "SNS",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v1/SNS.sol:17"
          },
          {
            "contract": "SNS",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v1/SNS.sol:18"
          },
          {
            "contract": "SNS",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:19"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:20"
          },
          {
            "contract": "SNS",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:21"
          },
          {
            "contract": "SNS",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v1/SNS.sol:24"
          },
          {
            "contract": "SNS",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:27"
          },
          {
            "contract": "SNS",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v1/SNS.sol:30"
          },
          {
            "contract": "SNS",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:38"
          },
          {
            "contract": "SNS",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)6046_storage)",
            "src": "contracts/v1/SNS.sol:47"
          },
          {
            "contract": "SNS",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:50"
          },
          {
            "contract": "SNS",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v1/SNS.sol:53"
          },
          {
            "contract": "SNS",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/SNS.sol:56"
          },
          {
            "contract": "SNS",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v1/SNS.sol:59"
          },
          {
            "contract": "SNS",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v1/SNS.sol:62"
          },
          {
            "contract": "SNS",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v1/SNS.sol:65"
          },
          {
            "contract": "SNS",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v1/SNS.sol:68"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)6046_storage)": {
            "label": "mapping(string => struct SNS.ResolverInfo)"
          },
          "t_struct(ResolverInfo)6046_storage": {
            "label": "struct SNS.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0cb37aa406296599602c9505d686a3f3748ecf175091d0cc3dca55a5d11a66b": {
      "address": "0x781924028274E19d44Ab508924Eae3a1026A3ea4",
      "txHash": "0xbbac8372be9631a7c4bf637e261c6e7100436b70536a744b0f456e4f4a980d85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2/SNSV2.sol:18"
          },
          {
            "contract": "SNSV2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2/SNSV2.sol:19"
          },
          {
            "contract": "SNSV2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:20"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:21"
          },
          {
            "contract": "SNSV2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:22"
          },
          {
            "contract": "SNSV2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2/SNSV2.sol:25"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:28"
          },
          {
            "contract": "SNSV2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2/SNSV2.sol:31"
          },
          {
            "contract": "SNSV2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:39"
          },
          {
            "contract": "SNSV2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)10802_storage)",
            "src": "contracts/v2/SNSV2.sol:48"
          },
          {
            "contract": "SNSV2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:51"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:54"
          },
          {
            "contract": "SNSV2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2/SNSV2.sol:57"
          },
          {
            "contract": "SNSV2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2/SNSV2.sol:60"
          },
          {
            "contract": "SNSV2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:63"
          },
          {
            "contract": "SNSV2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2/SNSV2.sol:66"
          },
          {
            "contract": "SNSV2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2/SNSV2.sol:69"
          },
          {
            "contract": "SNSV2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:453"
          },
          {
            "contract": "SNSV2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2/SNSV2.sol:476"
          },
          {
            "contract": "SNSV2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)12086_storage)",
            "src": "contracts/v2/SNSV2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)10802_storage)": {
            "label": "mapping(string => struct SNSV2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)10802_storage": {
            "label": "struct SNSV2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)12086_storage)": {
            "label": "mapping(uint256 => struct SNSV2.Coin)"
          },
          "t_struct(Coin)12086_storage": {
            "label": "struct SNSV2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5b64c08f302fb66d30ca3a56affd6e191c21d008af07142ac8458a4021f24740": {
      "address": "0xe367Ef67b830175EA5066ec96CF199B203943396",
      "txHash": "0x6e332b34ca6db3de7ea1a25f34ceee940fbccb3bc60e39e612a0e401aa0f7f0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:454"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:471"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9130_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:491"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9130_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9130_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aa4a3090c76ac931d04e95de9c5c79c0d343866d78ce6038aa351d8e1338d92f": {
      "address": "0x991D316C436B06Ad78B7e1E8F07b94dfA78cCBc6",
      "txHash": "0x07226b0fcbd51162bdabd175f5d3c78e73021875ba3a667819c828390aaec1da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.1/SNSV2_1.sol:18"
          },
          {
            "contract": "SNSV2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.1/SNSV2_1.sol:19"
          },
          {
            "contract": "SNSV2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:20"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:21"
          },
          {
            "contract": "SNSV2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:22"
          },
          {
            "contract": "SNSV2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.1/SNSV2_1.sol:25"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:28"
          },
          {
            "contract": "SNSV2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.1/SNSV2_1.sol:31"
          },
          {
            "contract": "SNSV2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:39"
          },
          {
            "contract": "SNSV2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:48"
          },
          {
            "contract": "SNSV2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:51"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:54"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:57"
          },
          {
            "contract": "SNSV2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.1/SNSV2_1.sol:60"
          },
          {
            "contract": "SNSV2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:63"
          },
          {
            "contract": "SNSV2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:66"
          },
          {
            "contract": "SNSV2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.1/SNSV2_1.sol:69"
          },
          {
            "contract": "SNSV2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:455"
          },
          {
            "contract": "SNSV2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.1/SNSV2_1.sol:472"
          },
          {
            "contract": "SNSV2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)9117_storage)",
            "src": "contracts/v2.1/SNSV2_1.sol:492"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)7868_storage)": {
            "label": "mapping(string => struct SNSV2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)7868_storage": {
            "label": "struct SNSV2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)9117_storage)": {
            "label": "mapping(uint256 => struct SNSV2_1.Coin)"
          },
          "t_struct(Coin)9117_storage": {
            "label": "struct SNSV2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93aa4682fd700d2e620d0c871f714b75a8f2a9b9f4565eae597e3a34f71b2e3f": {
      "address": "0x7f602230D2d6455DE547C78fCB5eb48818fB2132",
      "txHash": "0x1f7c34bdc12b01458ccabdd3dcb3b938401a105106323f668ef3347ac726c6bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_2",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.2/SNSV2_2.sol:18"
          },
          {
            "contract": "SNSV2_2",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.2/SNSV2_2.sol:19"
          },
          {
            "contract": "SNSV2_2",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:20"
          },
          {
            "contract": "SNSV2_2",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:21"
          },
          {
            "contract": "SNSV2_2",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:22"
          },
          {
            "contract": "SNSV2_2",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.2/SNSV2_2.sol:25"
          },
          {
            "contract": "SNSV2_2",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:28"
          },
          {
            "contract": "SNSV2_2",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.2/SNSV2_2.sol:31"
          },
          {
            "contract": "SNSV2_2",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:39"
          },
          {
            "contract": "SNSV2_2",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)11147_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:48"
          },
          {
            "contract": "SNSV2_2",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.2/SNSV2_2.sol:51"
          },
          {
            "contract": "SNSV2_2",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:54"
          },
          {
            "contract": "SNSV2_2",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:57"
          },
          {
            "contract": "SNSV2_2",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.2/SNSV2_2.sol:60"
          },
          {
            "contract": "SNSV2_2",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:63"
          },
          {
            "contract": "SNSV2_2",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:66"
          },
          {
            "contract": "SNSV2_2",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.2/SNSV2_2.sol:69"
          },
          {
            "contract": "SNSV2_2",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:465"
          },
          {
            "contract": "SNSV2_2",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2/SNSV2_2.sol:482"
          },
          {
            "contract": "SNSV2_2",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)12410_storage)",
            "src": "contracts/v2.2/SNSV2_2.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)11147_storage)": {
            "label": "mapping(string => struct SNSV2_2.ResolverInfo)"
          },
          "t_struct(ResolverInfo)11147_storage": {
            "label": "struct SNSV2_2.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)12410_storage)": {
            "label": "mapping(uint256 => struct SNSV2_2.Coin)"
          },
          "t_struct(Coin)12410_storage": {
            "label": "struct SNSV2_2.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f4efe30f8e76d299649a7fb43cf36bf2a088b7946575fa1450b5ed1452c74518": {
      "address": "0x5431cc8D1962C91Fced8f475C8257D23Dc112D26",
      "txHash": "0x12035dc1c3bfd68b06497bee4e417ff296044adea89867013df95eb73d038582",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:19"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/v1/ERC721URIStorageUpgradeable.sol:71"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "NFTV2",
            "label": "_tokenMinted",
            "type": "t_uint256",
            "src": "contracts/v2/NFTV2.sol:25"
          },
          {
            "contract": "NFTV2",
            "label": "_isOnlySetOnce",
            "type": "t_bool",
            "src": "contracts/v2/NFTV2.sol:63"
          },
          {
            "contract": "NFTV2",
            "label": "setTokenURLOnce",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/v2/NFTV2.sol:73"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_key",
            "type": "t_contract(LinkKey)5635",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:18"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "END_STR",
            "type": "t_string_storage",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:19"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "STANDARD_LENGTH",
            "type": "t_uint256",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:20"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "SHORT_LENGTH_MAX",
            "type": "t_uint256",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:21"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "SHORT_LENGTH_MIN",
            "type": "t_uint256",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:22"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_canManagerMint",
            "type": "t_bool",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:25"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_increasesNumber",
            "type": "t_uint256",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:28"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_increasesPrice",
            "type": "t_uint256",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:31"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_shortNameAllowedlist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:39"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_resolverInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9437_storage)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:48"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_defaultResolverAddress",
            "type": "t_address",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:51"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_nameOfOwner",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:54"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_nameOfTokenId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:57"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_tokenIdOfName",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:60"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:63"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_nameRegistered",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:66"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_feeTo",
            "type": "t_address",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:69"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_userTokenManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:465"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_assetsManagerList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:482"
          },
          {
            "contract": "SNSV2_2_1",
            "label": "_coins",
            "type": "t_mapping(t_uint256,t_struct(Coin)10732_storage)",
            "src": "contracts/v2.2.1/SNSV2_2_1.sol:502"
          }
        ],
        "types": {
          "t_contract(LinkKey)5635": {
            "label": "contract LinkKey"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ResolverInfo)9437_storage)": {
            "label": "mapping(string => struct SNSV2_2_1.ResolverInfo)"
          },
          "t_struct(ResolverInfo)9437_storage": {
            "label": "struct SNSV2_2_1.ResolverInfo",
            "members": [
              {
                "label": "resolverAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(Coin)10732_storage)": {
            "label": "mapping(uint256 => struct SNSV2_2_1.Coin)"
          },
          "t_struct(Coin)10732_storage": {
            "label": "struct SNSV2_2_1.Coin",
            "members": [
              {
                "label": "_coinAddress",
                "type": "t_address"
              },
              {
                "label": "_coinsPrice",
                "type": "t_uint256"
              },
              {
                "label": "_coinsDestroy",
                "type": "t_bool"
              },
              {
                "label": "_coinsDestroyPercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
